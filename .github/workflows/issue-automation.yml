name: üöÄ Issue Automation

on:
  issues:
    types: [opened]

permissions:
  issues: write
  repository-projects: write
  actions: read
  contents: read

jobs:
  update_issue_fields:
    runs-on: ubuntu-latest
    steps:
      - name: Definir Issue Type no GitHub Projects
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = context.payload.issue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const labels = context.payload.issue.labels.map(label => label.name);

            let issueType = null;

            if (labels.includes("User story")) {
              issueType = "Feature";
            } else if (labels.includes("Task")) {
              issueType = "Task";
            }

            if (!issueType) {
              console.log("A issue n√£o √© uma Feature nem uma Task.");
              return;
            }

            // 1Ô∏è‚É£ Buscar a Issue no Projeto para encontrar o ID do Item
            const projects = await github.rest.projects.listForRepo({
              owner,
              repo
            });

            if (!projects.data.length) {
              console.log("Nenhum projeto encontrado.");
              return;
            }

            const projectId = projects.data[0].id; // Pegando o primeiro projeto

            const items = await github.rest.projects.listCards({
              project_id: projectId
            });

            const issueItem = items.data.find(card => 
              card.content_url && card.content_url.includes(`/issues/${issueNumber}`)
            );

            if (!issueItem) {
              console.log("A issue n√£o est√° no projeto.");
              return;
            }

            // 2Ô∏è‚É£ Buscar os campos do Projeto para encontrar "Issue Type"
            const fields = await github.rest.projects.getProject({
              project_id: projectId
            });

            const issueTypeField = fields.data.fields.find(field => field.name === "Issue Type");
            if (!issueTypeField) {
              console.log('Campo "Issue Type" n√£o encontrado no projeto.');
              return;
            }

            // 3Ô∏è‚É£ Atualizar o campo "Issue Type" no GitHub Projects
            await github.rest.projects.updateCard({
              card_id: issueItem.id,
              note: `Issue Type: ${issueType}`
            });

            console.log(`Issue #${issueNumber} marcada como "${issueType}" no projeto.`);

